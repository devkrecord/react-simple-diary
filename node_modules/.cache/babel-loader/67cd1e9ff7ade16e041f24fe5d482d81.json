{"ast":null,"code":"var _jsxFileName = \"/Users/celine/react-simple-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n/*\nconst dummyList = [\n  {\n    id: 1,\n    author: 'dev.kim',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: '홍길동',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: '둘리',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 4,\n    author: '마이콜',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 5,\n    author: '또치',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\n// https://jsonplaceholder.typicode.com/comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n    console.log('res', res);\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetId => {\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2o8Xchl1A9LFe9GiqWSSYkjxPVs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/celine/react-simple-diary/src/App.js"],"names":["useEffect","useRef","useState","DiaryEditor","DiaryList","App","data","setData","dataId","getData","res","fetch","then","json","console","log","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","onRemove","targetId","newDiaryList","filter","onEdit","newContent"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMM,MAAM,GAAGP,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,+CADqB,CAAL,CAEhBC,IAFgB,CAEVF,GAAD,IAASA,GAAG,CAACG,IAAJ,EAFE,CAAlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,GAAnB;AAEA,UAAMM,QAAQ,GAAGN,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAa,EAAb,EAAiBC,GAAjB,CAAsBC,EAAD,IAAQ;AAC5C,aAAO;AACLC,QAAAA,MAAM,EAAED,EAAE,CAACE,KADN;AAELC,QAAAA,OAAO,EAAEH,EAAE,CAACI,IAFP;AAGLC,QAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAHpC;AAILC,QAAAA,YAAY,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAJT;AAKLC,QAAAA,EAAE,EAAEvB,MAAM,CAACwB,OAAP;AALC,OAAP;AAOD,KARgB,CAAjB;AASAzB,IAAAA,OAAO,CAACS,QAAD,CAAP;AACD,GAhBD;;AAkBAhB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMwB,QAAQ,GAAG,CAACb,MAAD,EAASE,OAAT,EAAkBE,OAAlB,KAA8B;AAC7C,UAAMI,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,UAAMI,OAAO,GAAG;AACdd,MAAAA,MADc;AAEdE,MAAAA,OAFc;AAGdE,MAAAA,OAHc;AAIdI,MAAAA,YAJc;AAKdG,MAAAA,EAAE,EAAEvB,MAAM,CAACwB;AALG,KAAhB;AAOAxB,IAAAA,MAAM,CAACwB,OAAP,IAAkB,CAAlB;AACAzB,IAAAA,OAAO,CAAC,CAAC2B,OAAD,EAAU,GAAG5B,IAAb,CAAD,CAAP;AACD,GAXD;;AAaA,QAAM6B,QAAQ,GAAIC,QAAD,IAAc;AAC7B,UAAMC,YAAY,GAAG/B,IAAI,CAACgC,MAAL,CAAanB,EAAD,IAAQA,EAAE,CAACY,EAAH,KAAUK,QAA9B,CAArB;AACA7B,IAAAA,OAAO,CAAC8B,YAAD,CAAP;AACD,GAHD;;AAKA,QAAME,MAAM,GAAG,CAACH,QAAD,EAAWI,UAAX,KAA0B;AACvCjC,IAAAA,OAAO,CACLD,IAAI,CAACY,GAAL,CAAUC,EAAD,IACPA,EAAE,CAACY,EAAH,KAAUK,QAAV,GAAqB,EAAE,GAAGjB,EAAL;AAASG,MAAAA,OAAO,EAAEkB;AAAlB,KAArB,GAAsDrB,EADxD,CADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEc;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEM,MAAnB;AAA2B,MAAA,QAAQ,EAAEJ,QAArC;AAA+C,MAAA,SAAS,EAAE7B;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1DD;;GAAMD,G;;KAAAA,G;AA2DN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n/*\nconst dummyList = [\n  {\n    id: 1,\n    author: 'dev.kim',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: '홍길동',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: '둘리',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 4,\n    author: '마이콜',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 5,\n    author: '또치',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\n\n// https://jsonplaceholder.typicode.com/comments\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      'https://jsonplaceholder.typicode.com/comments'\n    ).then((res) => res.json());\n    console.log('res', res);\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n    setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}