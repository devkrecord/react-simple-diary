{"ast":null,"code":"var _jsxFileName = \"/Users/celine/react-simple-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useRef, useState } from 'react';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n/*\nconst dummyList = [\n  {\n    id: 1,\n    author: 'dev.kim',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: '홍길동',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: '둘리',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 4,\n    author: '마이콜',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 5,\n    author: '또치',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\n// https://jsonplaceholder.typicode.com/comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments');\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetId => {\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/celine/react-simple-diary/src/App.js"],"names":["useRef","useState","DiaryEditor","DiaryList","App","data","setData","dataId","getData","res","fetch","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","newDiaryList","filter","it","onEdit","newContent","map"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMM,MAAM,GAAGP,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAvB;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,KAA8B;AAC7C,UAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,UAAMC,OAAO,GAAG;AACdN,MAAAA,MADc;AAEdC,MAAAA,OAFc;AAGdC,MAAAA,OAHc;AAIdC,MAAAA,YAJc;AAKdI,MAAAA,EAAE,EAAEZ,MAAM,CAACa;AALG,KAAhB;AAOAb,IAAAA,MAAM,CAACa,OAAP,IAAkB,CAAlB;AACAd,IAAAA,OAAO,CAAC,CAACY,OAAD,EAAU,GAAGb,IAAb,CAAD,CAAP;AACD,GAXD;;AAaA,QAAMgB,QAAQ,GAAIC,QAAD,IAAc;AAC7B,UAAMC,YAAY,GAAGlB,IAAI,CAACmB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUG,QAA9B,CAArB;AACAhB,IAAAA,OAAO,CAACiB,YAAD,CAAP;AACD,GAHD;;AAKA,QAAMG,MAAM,GAAG,CAACJ,QAAD,EAAWK,UAAX,KAA0B;AACvCrB,IAAAA,OAAO,CACLD,IAAI,CAACuB,GAAL,CAAUH,EAAD,IACPA,EAAE,CAACN,EAAH,KAAUG,QAAV,GAAqB,EAAE,GAAGG,EAAL;AAASZ,MAAAA,OAAO,EAAEc;AAAlB,KAArB,GAAsDF,EADxD,CADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEe,MAAnB;AAA2B,MAAA,QAAQ,EAAEL,QAArC;AAA+C,MAAA,SAAS,EAAEhB;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxCD;;GAAMD,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useRef, useState } from 'react';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n/*\nconst dummyList = [\n  {\n    id: 1,\n    author: 'dev.kim',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: '홍길동',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: '둘리',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 4,\n    author: '마이콜',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 5,\n    author: '또치',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\n\n// https://jsonplaceholder.typicode.com/comments\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments');\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}