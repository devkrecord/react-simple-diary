[{"/Users/celine/react-simple-diary/src/index.js":"1","/Users/celine/react-simple-diary/src/App.js":"2","/Users/celine/react-simple-diary/src/DiaryEditor.js":"3","/Users/celine/react-simple-diary/src/DiaryList.js":"4","/Users/celine/react-simple-diary/src/DiaryItem.js":"5"},{"size":432,"mtime":1648305811756,"results":"6","hashOfConfig":"7"},{"size":3049,"mtime":1648519375553,"results":"8","hashOfConfig":"7"},{"size":1836,"mtime":1648429865836,"results":"9","hashOfConfig":"7"},{"size":447,"mtime":1648451679388,"results":"10","hashOfConfig":"7"},{"size":1885,"mtime":1648433828140,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mxi6rl",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/celine/react-simple-diary/src/index.js",[],[],"/Users/celine/react-simple-diary/src/App.js",["30"],[],"import './App.css';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n/*\nconst dummyList = [\n  {\n    id: 1,\n    author: 'dev.kim',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: '홍길동',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: '둘리',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 4,\n    author: '마이콜',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 5,\n    author: '또치',\n    content: 'hello~',\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      'https://jsonplaceholder.typicode.com/comments'\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n    setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  const getDiaryAnalysis = useMemo(() => {\n    console.log('일기 분석');\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]); //data.length 가 변하지 않으면 연산을 수행하지마라. -> 최적화\n\n  // 함수 최적화를 위해 useMemo를 사용하면 '값'을 리턴하기 때문에 더이상 getDiaryAnalysis를 함수로 사용할 수 없다.\n  // const { goodCount, badCount, goodRatio } = getDiaryAnalysis();\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <div>전체 일기 : {data.length}</div>\n      <div>기분 좋은 일기 개수: {goodCount}</div>\n      <div>기분 나쁜 일기 개수: {badCount}</div>\n      <div>기분 좋은 일기 비율: {goodRatio}</div>\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n};\nexport default App;\n","/Users/celine/react-simple-diary/src/DiaryEditor.js",[],[],["31","32"],"/Users/celine/react-simple-diary/src/DiaryList.js",[],[],["33","34"],"/Users/celine/react-simple-diary/src/DiaryItem.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":104,"column":6,"nodeType":"37","endLine":104,"endColumn":19,"suggestions":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"39","replacedBy":"43"},{"ruleId":"41","replacedBy":"44"},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-native-reassign",["46"],"no-negated-in-lhs",["47"],["46"],["47"],{"desc":"48","fix":"49"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data]",{"range":"50","text":"51"},[2230,2243],"[data]"]